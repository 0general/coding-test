"""
https://www.acmicpc.net/problem/15990
"""
import sys
input = sys.stdin.readline

t = int(input())
dp = [[0, 0, 0] for _ in range(100001)]
# dp 테이블에 들어갈 값 : 마지막으로 더해진 수가 1,2,3인 개수 배열
dp[1] = [1, 0, 0]
dp[2] = [0, 1, 0]
dp[3] = [1, 1, 1]

n = []
for _ in range(t):
    n.append(int(input()))

for i in range(4, max(n)+1):  # 모듈러 연산의 성질에 따라 (A+B)%C = (A%C + B%C)%C
    if dp[i] == [0, 0, 0]:
        # 숫자 i-1에서 1을 더하는 경우 - 1으로 끝난 경우 제외하고 전부
        dp[i][0] = (dp[i-1][1] + dp[i-1][2]) % 1000000009  # 2로 끝난 경우, 2로 끝난 경우
        # 숫자 i-2에서 2을 더하는 경우 - 2으로 끝난 경우 제외하고 전부
        dp[i][1] = (dp[i-2][0] + dp[i-2][2]) % 1000000009  # 1로 끝난 경우, 3로 끝난 경우
        # 숫자 i-3에서 3을 더하는 경우 - 3으로 끝난 경우 제외하고 전부
        dp[i][2] = (dp[i-3][0] + dp[i-3][1]) % 1000000009  # 2로 끝난 경우, 2로 끝난 경우

        # 각각 모듈러 연산을 안해주는 경우 숫자가 커져 덧셈 연산에 시간이 오래 걸리며 시간 초과가 난다.

for num in n:
    print(sum(dp[num]) % 1000000009)
